plugins {
	id 'com.github.johnrengelman.shadow' version '7.0.0'
}

dependencies {
	api project(':minime-parser')
	api libs.jopt.simple
	api libs.antlr.runtime

	testImplementation 'org.jogamp.jogl:jogl-all:2.3.2'
	testImplementation 'org.jogamp.gluegen:gluegen-rt-main:2.3.2'

	testImplementation project(':minime-test-util')
}

jar {
	manifest {
		attributes 'Implementation-Title': 'GLSL-Optimizer',
				'Implementation-Version': project.version,
				'Main-Class': 'com.tazadum.glsl.cli.OptimizerMain'
	}
}

shadowJar {
	configurations = [project.configurations.runtimeClasspath]
	archiveBaseName.set('minime')
	archiveClassifier.set('')
}

import org.apache.tools.ant.filters.ReplaceTokens
task dist(type:Copy) {
	dependsOn shadowJar
	from shadowJar
	from ("src/main/scripts") {
		filter(ReplaceTokens, tokens: [VERSION: project.version])
	}
	into "$buildDir/dist"
}

task copyInstallTemplate(type: Copy) {
	dependsOn processResources
	from('src/main/build-scripts/') {
		filter(ReplaceTokens, tokens: [
				version: project.version
		])
	}
	into "$buildDir"
}
jar.dependsOn copyInstallTemplate

task addPayload(type: Exec) {
	dependsOn dist
	commandLine "$buildDir/add_payload.sh"
}

task distZip(type: Zip) {
	dependsOn dist
	archiveFileName = "minime-${project.version}.zip"
	destinationDirectory = project.buildDir
	from("$buildDir/dist")
}

addPayload.dependsOn copyInstallTemplate
dist.finalizedBy addPayload
dist.finalizedBy distZip
