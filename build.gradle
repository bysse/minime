apply plugin: 'java'
apply plugin: 'antlr'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'com.tazadum.glsl'
version = '1.1.0'

ext.antlr = [
        grammarpackage: "com.tazadum.glsl.language",
        antlrSource   : 'src/main/antlr',
        destinationDir: "src/generated-sources/java"
]

repositories {
    jcenter()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.antlr:antlr4-runtime:4.+'
    compile 'net.sf.jopt-simple:jopt-simple:5.0.+'

	antlr 'org.antlr:antlr4:4.+'

    testCompile 'junit:junit:4.12'
    testCompile 'org.jogamp.jogl:jogl-all:2.3.2'
    testCompile 'org.jogamp.gluegen:gluegen-rt-main:2.3.2'
}

// work around for https://github.com/gradle/gradle/issues/820
configurations {
	runtime {
		exclude module: 'antlr4'
	}
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'GLSL-Optimizer',
				'Implementation-Version': project.version,
				'Main-Class': 'com.tazadum.glsl.Optimizer'
	}
	baseName = project.name + '-bundle'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}


generateGrammarSource {
	arguments += ['-package', 'com.tazadum.glsl.language', '-visitor']
	outputDirectory = file("${projectDir}/generated-src/com/tazadum/glsl/language")
}

task cleanAntlr(type: Delete) {
	delete file("${projectDir}/generated-src")
}
clean.dependsOn cleanAntlr

sourceSets.main.java.srcDirs += file("${projectDir}/generated-src")

task wrapper(type: Wrapper) {
	gradleVersion = '3.3'
}
